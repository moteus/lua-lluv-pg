io.stdout:setvbuf'no';io.stderr:setvbuf'no';
package.path = "..\\src\\?.lua;" .. package.path

local Array = require "lluv.pg.array"
local NULL  = require "lluv.pg.msg".NULL

describe('Decode array', function()
  describe('text mode',function()
    it('should decode NULL array', function()
      local r = Array.decode(0, NULL)
      assert.same(NULL, r)
    end)

    it('should decode empty array', function()
      local r = Array.decode(0, '{}')
      assert.same({}, r)
    end)

    it('should decode simple array', function()
      local r = Array.decode(0, '{1,2,3}')
      assert.same({'1','2','3'}, r)
    end)

    it('should decode multidimensional array', function()
      local r = Array.decode(0, '{{1,2,3},{4,5,6}}')
      assert.same({{'1','2','3'},{'4','5','6'}}, r)
    end)

    it('should decode strings array', function()
      local r = Array.decode(0, '{{"1","2","3"},{"4","5","6"}}')
      assert.same({{'1','2','3'},{'4','5','6'}}, r)
    end)

    it('should decode NULL values inside array', function()
      local r = Array.decode(0, '{NULL,NULL1,"NULL",NULL}')
      assert.same({NULL,'NULL1','NULL', NULL}, r)
    end)

  end)

  describe('binary mode',function()
    it('should decode NULL array', function()
      local r = Array.decode(1, NULL)
      assert.same(NULL, r)
    end)

    it('should decode simple int array', function()
      local r = Array.decode(1, '\0\0\0\1\0\0\0\0\0\0\0\23\0\0\0\3\0\0\0\1\0\0\0\4\0\0\0\1\0\0\0\4\0\0\0\2\0\0\0\4\0\0\0\3')
      assert.table({'\0\0\0\1','\0\0\0\1','\0\0\0\3'}, r)
    end)

    it('should decode simple string array', function()
      local s = '\0\0\0\1\0\0\0\0\0\0\0\25\0\0\0\3\0\0\0\1\0\0\0\2aa\0\0\0\2bb\0\0\0\2cc'
      local r = Array.decode(1, s)
      assert.table({'aa','bb','cc'}, r)
    end)

    it('should decode multidimensional array', function()
      local s = '\0\0\0\2\0\0\0\0\0\0\0\25\0\0\0\3\0\0\0\1\0\0\0\3\0\0\0\1\0\0\0\2a1\0\0\0\2a2' ..
                '\0\0\0\2a3\0\0\0\2b1\0\0\0\2b2\0\0\0\2b3\0\0\0\2c1\0\0\0\2c2\0\0\0\2c3'
      local r = Array.decode(1, s)
      assert.same({
        { 'a1', 'a2', 'a3' },
        { 'b1', 'b2', 'b3' },
        { 'c1', 'c2', 'c3' },
      }, r)
    end)

    it('should decode NULL values inside array', function()
      local s = '\0\0\0\1\0\0\0\1\0\0\0\25\0\0\0\4\0\0\0\1\255\255\255\255\0\0\0\5NULL1\0\0\0\4NULL\255\255\255\255'
      local r = Array.decode(1, s)
      assert.same({NULL,'NULL1','NULL', NULL}, r)
    end)
  end)
end)
